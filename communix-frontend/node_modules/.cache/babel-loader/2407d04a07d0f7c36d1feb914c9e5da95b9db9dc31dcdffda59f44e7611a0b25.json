{"ast":null,"code":"var _jsxFileName = \"/home/pavan/Desktop/communix/communix-frontend/src/pages/OnboardingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { studentQuestions, professionalQuestions } from \"../questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnboardingContainer = styled.div`\nbackground: linear-gradient(40deg, white 35%,#C6EBBE 100%);\n  background-size: 150% 100%;\n  animation: backgroundMove 15s ease infinite;\n\n  @keyframes backgroundMove {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n`;\n_c = OnboardingContainer;\nconst OnboardingContent = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  width: 100%;\n`;\n_c2 = OnboardingContent;\nconst Title = styled.h2`\n  text-align: center;\n  font-size: 2rem;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 2rem;\n`;\n_c3 = Title;\nconst QuestionContainer = styled.div`\n  margin-bottom: 2rem;\n`;\n_c4 = QuestionContainer;\nconst QuestionText = styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n  color: #555;\n`;\n_c5 = QuestionText;\nconst AnswerOptions = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c6 = AnswerOptions;\nconst OptionCard = styled.div`\n  padding: 1rem;\n  border: 2px solid ${({\n  selected\n}) => selected ? \"#C6EBBE\" : \"#e9ecef\"};\n  border-radius: 0.5rem;\n  background-color: ${({\n  selected\n}) => selected ? \"#C6EBBE\" : \"#fff\"};\n  color: ${({\n  selected\n}) => selected ? \"black\" : \"#333\"};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: ${({\n  selected\n}) => selected ? \"#C6EBBE\" : \"#f1f3f5\"};\n  }\n`;\n_c7 = OptionCard;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n_c8 = ButtonContainer;\nconst Button = styled.button`\n  background-color: #334195;\n  color: #fff;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.25rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c9 = Button;\nfunction OnboardingPage() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [profession, setProfession] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProfession = async () => {\n      try {\n        const storedProfession = localStorage.getItem(\"profession\");\n        if (storedProfession) {\n          setProfession(storedProfession);\n        } else {\n          navigate(\"/signup\");\n        }\n      } catch (error) {\n        setError(\"Failed to load user data.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProfession();\n  }, [navigate]);\n  const handleAnswerChange = (questionIndex, answer) => {\n    setAnswers(prevAnswers => {\n      const newAnswers = [...prevAnswers];\n      if (!newAnswers[questionIndex]) {\n        newAnswers[questionIndex] = {\n          question: questions[questionIndex].text,\n          answers: []\n        };\n      }\n      let updatedAnswers;\n      if (questionIndex === 0) {\n        updatedAnswers = [answer];\n      } else {\n        updatedAnswers = newAnswers[questionIndex].answers.includes(answer) ? newAnswers[questionIndex].answers.filter(a => a !== answer) : [...newAnswers[questionIndex].answers, answer];\n      }\n      newAnswers[questionIndex] = {\n        ...newAnswers[questionIndex],\n        answers: updatedAnswers\n      };\n      return newAnswers;\n    });\n  };\n  const handleNext = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n  const handleBack = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const userId = localStorage.getItem(\"userId\");\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`auth/users/${userId}/onboarding`, {\n        onboardingAnswers: answers\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      navigate(\"/waiting-list\");\n    } catch (error) {\n      setError(\"Failed to submit answers. Please try again.\");\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 12\n    }, this);\n  }\n  const questions = profession === \"student\" ? studentQuestions : professionalQuestions;\n  const allQuestionsAnswered = answers.length === questions.length && answers.every(answer => answer !== undefined);\n  if (currentQuestionIndex >= questions.length && allQuestionsAnswered) {\n    handleSubmit();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Thank you for completing the onboarding!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You will be redirected to the waiting list page shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(OnboardingContainer, {\n    children: /*#__PURE__*/_jsxDEV(OnboardingContent, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Onboarding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          children: currentQuestion.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnswerOptions, {\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionCard, {\n            selected: answers[currentQuestionIndex] && answers[currentQuestionIndex].answers.includes(option),\n            onClick: () => handleAnswerChange(currentQuestionIndex, option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBack,\n          disabled: currentQuestionIndex === 0,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          disabled: !answers[currentQuestionIndex],\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(OnboardingPage, \"BcWu/yPmaDwtbYMhc0rrAb1JOC4=\", false, function () {\n  return [useNavigate];\n});\n_c10 = OnboardingPage;\nexport default OnboardingPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"OnboardingContainer\");\n$RefreshReg$(_c2, \"OnboardingContent\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"QuestionContainer\");\n$RefreshReg$(_c5, \"QuestionText\");\n$RefreshReg$(_c6, \"AnswerOptions\");\n$RefreshReg$(_c7, \"OptionCard\");\n$RefreshReg$(_c8, \"ButtonContainer\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"OnboardingPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","styled","studentQuestions","professionalQuestions","jsxDEV","_jsxDEV","OnboardingContainer","div","_c","OnboardingContent","_c2","Title","h2","_c3","QuestionContainer","_c4","QuestionText","p","_c5","AnswerOptions","_c6","OptionCard","selected","_c7","ButtonContainer","_c8","Button","button","_c9","OnboardingPage","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","isLoading","setIsLoading","error","setError","profession","setProfession","navigate","fetchProfession","storedProfession","localStorage","getItem","handleAnswerChange","questionIndex","answer","prevAnswers","newAnswers","question","questions","text","updatedAnswers","includes","filter","a","handleNext","handleBack","handleSubmit","userId","token","put","onboardingAnswers","headers","Authorization","className","children","fileName","_jsxFileName","lineNumber","columnNumber","allQuestionsAnswered","length","every","undefined","currentQuestion","options","map","option","index","onClick","disabled","_c10","$RefreshReg$"],"sources":["/home/pavan/Desktop/communix/communix-frontend/src/pages/OnboardingPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { studentQuestions, professionalQuestions } from \"../questions\";\r\n\r\nconst OnboardingContainer = styled.div`\r\nbackground: linear-gradient(40deg, white 35%,#C6EBBE 100%);\r\n  background-size: 150% 100%;\r\n  animation: backgroundMove 15s ease infinite;\r\n\r\n  @keyframes backgroundMove {\r\n    0% {\r\n      background-position: 0% 50%;\r\n    }\r\n    50% {\r\n      background-position: 100% 50%;\r\n    }\r\n    100% {\r\n      background-position: 0% 50%;\r\n    }\r\n  }  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst OnboardingContent = styled.div`\r\n  background-color: #fff;\r\n  padding: 3rem;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  max-width: 600px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst QuestionContainer = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst QuestionText = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-bottom: 1rem;\r\n  color: #555;\r\n`;\r\n\r\nconst AnswerOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst OptionCard = styled.div`\r\n  padding: 1rem;\r\n  border: 2px solid ${({ selected }) => (selected ? \"#C6EBBE\" : \"#e9ecef\")};\r\n  border-radius: 0.5rem;\r\n  background-color: ${({ selected }) => (selected ? \"#C6EBBE\" : \"#fff\")};\r\n  color: ${({ selected }) => (selected ? \"black\" : \"#333\")};\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${({ selected }) => (selected ? \"#C6EBBE\" : \"#f1f3f5\")};\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #334195;\r\n  color: #fff;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nfunction OnboardingPage() {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [profession, setProfession] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfession = async () => {\r\n      try {\r\n        const storedProfession = localStorage.getItem(\"profession\");\r\n        if (storedProfession) {\r\n          setProfession(storedProfession);\r\n        } else {\r\n          navigate(\"/signup\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Failed to load user data.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProfession();\r\n  }, [navigate]);\r\n\r\n  const handleAnswerChange = (questionIndex, answer) => {\r\n    setAnswers((prevAnswers) => {\r\n      const newAnswers = [...prevAnswers];\r\n      if (!newAnswers[questionIndex]) {\r\n        newAnswers[questionIndex] = { question: questions[questionIndex].text, answers: [] };\r\n      }\r\n\r\n      let updatedAnswers;\r\n      if (questionIndex === 0) {\r\n        updatedAnswers = [answer];\r\n      } else {\r\n        updatedAnswers = newAnswers[questionIndex].answers.includes(answer)\r\n          ? newAnswers[questionIndex].answers.filter((a) => a !== answer)\r\n          : [...newAnswers[questionIndex].answers, answer];\r\n      }\r\n\r\n      newAnswers[questionIndex] = { ...newAnswers[questionIndex], answers: updatedAnswers };\r\n      return newAnswers;\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.put(\r\n        `auth/users/${userId}/onboarding`,\r\n        { onboardingAnswers: answers },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      navigate(\"/waiting-list\");\r\n    } catch (error) {\r\n      setError(\"Failed to submit answers. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div className=\"text-center\">Loading questions...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center text-red-500\">{error}</div>;\r\n  }\r\n\r\n  const questions =\r\n    profession === \"student\" ? studentQuestions : professionalQuestions;\r\n\r\n  const allQuestionsAnswered =\r\n    answers.length === questions.length &&\r\n    answers.every((answer) => answer !== undefined);\r\n\r\n  if (currentQuestionIndex >= questions.length && allQuestionsAnswered) {\r\n    handleSubmit();\r\n    return (\r\n      <div className=\"p-8\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">\r\n          Thank you for completing the onboarding!\r\n        </h2>\r\n        <p>You will be redirected to the waiting list page shortly.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <OnboardingContainer>\r\n      <OnboardingContent>\r\n        <Title>Onboarding</Title>\r\n        <QuestionContainer>\r\n          <QuestionText>{currentQuestion.text}</QuestionText>\r\n          <AnswerOptions>\r\n            {currentQuestion.options.map((option, index) => (\r\n              <OptionCard\r\n                key={index}\r\n                selected={\r\n                  answers[currentQuestionIndex] &&\r\n                  answers[currentQuestionIndex].answers.includes(option)\r\n                }\r\n                onClick={() => handleAnswerChange(currentQuestionIndex, option)}\r\n              >\r\n                {option}\r\n              </OptionCard>\r\n            ))}\r\n          </AnswerOptions>\r\n        </QuestionContainer>\r\n        <ButtonContainer>\r\n          <Button onClick={handleBack} disabled={currentQuestionIndex === 0}>\r\n            Back\r\n          </Button>\r\n          <Button onClick={handleNext} disabled={!answers[currentQuestionIndex]}>\r\n            Next\r\n          </Button>\r\n        </ButtonContainer>\r\n      </OnboardingContent>\r\n    </OnboardingContainer>\r\n  );\r\n}\r\n\r\nexport default OnboardingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}